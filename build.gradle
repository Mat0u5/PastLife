plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'ploceus' version '1.10-SNAPSHOT'
}

base {
	archivesName = project.archives_base_name
}
version = "${project.version}+mc${project.minecraft_version}"
group = project.maven_group

loom {
	clientOnlyMinecraftJar()
}

ploceus {
	clientOnlyMappings()
}

repositories {
	maven {
		name = 'Quilt'
		url = 'https://maven.quiltmc.org/repository/release'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings ploceus.featherMappings(project.feather_build)
	//nests ploceus.nests(project.nests_build)
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
	compileOnly "org.quiltmc:quilt-loader:${project.quilt_loader_version}"

	ploceus.dependOsl(project.osl_version, "client")
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": project.property('mod_version'),
				"targetVersion": project.property('target_version'),
				"minecraftVersion": stonecutter.current.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 8
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
//	withJavadocJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

